
Global Scan Queue
=================

The global scan queue holds a list of all files and other data to be
scanned by activated scan engines. Userscripts can queue files, strings,
bytestrings, and other data types into the queue, and these queued data
items will be passed to all running scanners for analysis.


Working with the Global Scan Queue
**********************************

Queue Arbitrary Data
--------------------
You can enqueue arbitrary data for scanning with `queue:add_raw()`.

  1| queue:add_raw('my_data', 'lorem ipsum dolor sit amet')


Queue a File
------------
You can add a file to the queue for scanning with `queue:add_file()`.

  1| queue:add_file 'C:/users/User/myfile.txt'


Queue all files in subdirectories
---------------------------------
You can quickly queue all files in a directory with `queue:add_file()`
and the sscan Filesystem API.

  1| local entries = fs:walk '/usr/share'
  2|
  3| for _,entry in ipairs(entries) do
  4|   if entry.type == 'file' then
  5|     queue:add_file(entry)
  6|   end
  7| end


Check how many items are queued
-------------------------------
You can quickly check how many items are queued for scanning with the
`queue:len()` function. As a shorthand, you can use the `#` operator.

  1| print('The queue length is: ' .. #queue)


QUEUE METHODS
*************

+-------------------+----------------+---------------------------------+
| Method            | Returns        | Description                     |
+-------------------+----------------+---------------------------------+
| queue:add_raw(    | nil            | Enqueue raw bytes for scanning. |
|   name: string,   |                |                                 |
|   content: string |                | This is useful for scanning     |
| )                 |                | data that does not originate    |
|                   |                | file, such as process or        |
|                   |                | network bytes.                  |
+-------------------+----------------+---------------------------------+
| queue:add_file(   | nil            | Enqueue a file for scanning.    |
|   path: string    |                |                                 |
| )                 |                | Note that the file will be      |
|                   |                | lazy-loaded. That is, only the  |
|                   |                | path is queued, and the actual  |
|                   |                | file is only loaded once        |
|                   |                | queue:dequeue() is called.      |
+-------------------+----------------+---------------------------------+
| queue:len()       | number         | Get the length of the queue.    |
|                   |                |                                 |
|                   |                | The shorthand #queue has the    |
|                   |                | same effect as `queue:len()`.   |
+-------------------+----------------+---------------------------------+
| queue:dequeue()   | name: string,  | Dequeue a data item.            |
|                   | path: string?, |                                 |
|                   | data: string,  | Meant for advanced use only.    |
|                   |                | Typically, the scan manager     |
|                   |                | handles dequeueing data.        |
+-------------------+----------------+---------------------------------+
